Index: src/main/java/priv/klochkov/island/config/PlantConfig.java
===================================================================
diff --git a/src/main/java/priv/klochkov/island/config/PlantConfig.java b/src/main/java/priv/klochkov/island/config/PlantConfig.java
deleted file mode 100644
--- a/src/main/java/priv/klochkov/island/config/PlantConfig.java	
+++ /dev/null	
@@ -1,31 +0,0 @@
-package priv.klochkov.island.config;
-import priv.klochkov.island.model.plant.AbstractPlant;
-import priv.klochkov.island.model.plant.Plant;
-import priv.klochkov.island.utils.Converter;
-
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-public class PlantConfig {
-//    public static List<Class<? extends AbstractPlant>> classesPlants;
-//    public static Map<Class<? extends AbstractPlant>, Integer> qualityPlantEveryStep;
-//
-//    static {
-//        classesPlants = initializationClassesPlants();
-//        qualityPlantEveryStep = convertPropertiesInhabitant("location/plantStep.properties");
-//    }
-//
-//    private static List<Class<? extends AbstractPlant>> initializationClassesPlants(){
-//        return List.of(Plant.class);
-//    }
-//
-//    private static Map<Class<? extends AbstractPlant>, Integer> convertPropertiesInhabitant(String fileName){
-//        Map<String, Float> map = Converter.convertPropertiesToMap(fileName);
-//        Map<Class<? extends AbstractPlant>, Integer> result = new HashMap<>();
-//        for (Class<? extends AbstractPlant> clazz : classesPlants) {
-//            result.put(clazz, (int) (float) map.get(clazz.getSimpleName()));
-//        };
-//        return result;
-//    }
-}
Index: src/main/java/priv/klochkov/island/config/AnimalConfig.java
===================================================================
diff --git a/src/main/java/priv/klochkov/island/config/AnimalConfig.java b/src/main/java/priv/klochkov/island/config/AnimalConfig.java
deleted file mode 100644
--- a/src/main/java/priv/klochkov/island/config/AnimalConfig.java	
+++ /dev/null	
@@ -1,92 +0,0 @@
-package priv.klochkov.island.config;
-
-import priv.klochkov.island.model.Inhabitant;
-import priv.klochkov.island.model.animal.Animal;
-import priv.klochkov.island.model.animal.herbivores.*;
-import priv.klochkov.island.model.animal.predators.*;
-import priv.klochkov.island.utils.Converter;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-
-public class AnimalConfig {
-
-//    public static List<Class<?extends Animal>> classesAnimal;
-//    public static Map<Class<? extends Animal>, Map<Class<? extends Inhabitant>, Float>> dataProbability;
-//    public static Map<Class<? extends Inhabitant>, Integer> maxKids;
-//    public static final List<Class<? extends Inhabitant>> classesInhabitant;
-//
-//    static {
-//        classesAnimal = initializationClassesAnimal();
-//        dataProbability = initializationDataProbability();
-//        maxKids = convertPropertiesKids();
-//    }
-//
-//    private static List<Class<? extends Animal>> initializationClassesAnimal(){
-//        return List.of(Wolf.class,
-//                Bear.class,
-//                Boar.class,
-//                Buffalo.class,
-//                Caterpillar.class,
-//                Deer.class,
-//                Duck.class,
-//                Eagle.class,
-//                Fox.class,
-//                Goat.class,
-//                Hare.class,
-//                Horse.class,
-//                Mouse.class,
-//                Sheep.class,
-//                Snake.class);
-//    }
-//
-//    private static Map<Class<? extends Animal>, Map<Class<? extends Inhabitant>, Float>> initializationDataProbability(){
-//        Map<Class<? extends Animal>, Map<Class<? extends Inhabitant>, Float>> result = new HashMap<>();
-//        List<String> fileNamesProbability = classesAnimal.stream()
-//                .map(clazz -> "animals/probability/" + clazz.getSimpleName().toLowerCase() + ".properties").toList();
-//        for (int i = 0; i < fileNamesProbability.size(); i++) {
-//            result.put(classesAnimal.get(i), convertProperties(fileNamesProbability.get(i)));
-//        }
-//        return result;
-//    }
-//
-//
-//    private static Map<Class<? extends Inhabitant>, Float> convertProperties(String fileName){
-//        Map<String, Float> map = Converter.convertPropertiesToMap(fileName);
-//        Map<Class<? extends Inhabitant>, Float> map1 = Converter.convertKeysMapStringToClass1(map, LocationConfig.classesInhabitant);
-////        Map<Class<? extends Inhabitant>, Float> result = new HashMap<>();
-////        for (Map.Entry<Class<?>, Float> entry : map1.entrySet()) {
-////            result.put((Class<? extends Inhabitant>) entry.getKey(), entry.getValue());
-////        };
-//        return map1;
-//    }
-//
-//
-//    private static Map<Class<? extends Inhabitant>, Integer> convertPropertiesKids(){
-//        Map<Class<? extends Inhabitant>, Float> map = convertProperties("kids/count.properties");
-//        Map<Class<? extends Inhabitant>, Integer> result = new HashMap<>();
-//        for (Map.Entry<Class<? extends Inhabitant>, Float> entry : map.entrySet()) {
-//            result.put(entry.getKey(), (int) (float) entry.getValue());
-//        }
-//        return result;
-//    }
-//
-//
-//    public static void main(String[] args) {
-////        classesAnimal.stream().forEach(System.out::println);
-////        System.out.println();
-////        for (Map.Entry<Class<? extends Animal>, Map<Class<? extends Inhabitant>, Float>> entry1: dataProbability.entrySet() ) {
-////            System.out.println();
-////            System.out.println(entry1.getKey());
-////            Map <Class<? extends Inhabitant>, Float> map = entry1.getValue();
-////            for (Map.Entry<Class<? extends Inhabitant>, Float> entry2 : map.entrySet()) {
-////                System.out.println(entry2);
-////            }
-////        }
-//        for (Map.Entry<Class<? extends Inhabitant>, Integer> entry : maxKids.entrySet()) {
-//            System.out.println(entry.getKey().getSimpleName() + " : " + entry.getValue());
-//        }
-//
-//    }
-}
Index: src/main/java/priv/klochkov/island/config/LocationConfig.java
===================================================================
diff --git a/src/main/java/priv/klochkov/island/config/LocationConfig.java b/src/main/java/priv/klochkov/island/config/LocationConfig.java
deleted file mode 100644
--- a/src/main/java/priv/klochkov/island/config/LocationConfig.java	
+++ /dev/null	
@@ -1,50 +0,0 @@
-package priv.klochkov.island.config;
-
-import priv.klochkov.island.model.Inhabitant;
-import priv.klochkov.island.model.plant.Plant;
-import priv.klochkov.island.utils.Converter;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-
-
-public class LocationConfig {
-
-//    public static final List<Class<? extends Inhabitant>> classesInhabitant;
-//    public static final Map<Class<? extends Inhabitant>, Integer> maxQualityInhabitants;
-//
-//    static {
-//        classesInhabitant = initializationListInhabitant();
-//        maxQualityInhabitants = convertProperties("location/numberAnimal.properties");
-//    }
-//
-//    private static List<Class<? extends Inhabitant>> initializationListInhabitant(){
-//        List<Class<? extends Inhabitant>> result = new ArrayList<>(AnimalConfig.classesAnimal);
-//        result.addAll(PlantConfig.classesPlants);
-//        return result;
-//    }
-//
-//    private static Map<Class<? extends Inhabitant>, Integer> convertProperties(String fileName){
-//        Map<String, Float> map = Converter.convertPropertiesToMap(fileName);
-//        Map<Class<? extends Inhabitant>, Integer> result = new HashMap<>();
-//        for (Class<? extends Inhabitant> clazz : classesInhabitant) {
-//            result.put(clazz, (int) (float) map.get(clazz.getSimpleName()));
-//        };
-//        return result;
-//    }
-//
-//    public static void main(String[] args) {
-//        for (Map.Entry<Class<? extends Inhabitant>, Integer> entry : maxQualityInhabitants.entrySet()) {
-//            System.out.println(entry);
-//        }
-//
-//        System.out.println();
-//        System.out.println();
-//
-//        System.out.println(classesInhabitant);
-//    }
-
-}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,28 +5,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="0039d95b-3814-478f-bb39-4fe01bc23792" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/config/InhabitantConfig.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/App.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/App.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/Factory/FactoryInhabitant.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/Factory/FactoryInhabitant.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/config/AnimalConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/config/AnimalConfig.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/config/LocationConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/config/LocationConfig.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/config/PlantConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/config/PlantConfig.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/controller/Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/controller/Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/controller/IslandController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/controller/IslandController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/config/AnimalConfig.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/config/LocationConfig.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/config/PlantConfig.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/controller/LocationController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/controller/LocationController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/model/animal/Animal.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/model/animal/Animal.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/model/island/Location.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/model/island/Location.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/tasks/TaskAnimal.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/tasks/AnimalTask.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/tasks/TaskView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/tasks/TaskView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/utils/Converter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/utils/Converter.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/view/ViewIsland.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/priv/klochkov/island/view/ViewIsland.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/animals/probability/bear.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/animals/probability/bear.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/animals/probability/fox.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/animals/probability/fox.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/animals/probability/snake.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/animals/probability/snake.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/animals/probability/wolf.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/animals/probability/wolf.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/kids/count.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/kids/count.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/location/numberAnimal.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/location/numberAnimal.properties" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -176,7 +159,7 @@
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="feature" />
+                        <option value="featureRev" />
                       </list>
                     </value>
                   </entry>
@@ -203,18 +186,8 @@
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/src/main/java/priv/klochkov/island/controller/LocationController.java</url>
-          <line>195</line>
-          <option name="timeStamp" value="39" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/main/java/priv/klochkov/island/controller/LocationController.java</url>
-          <line>278</line>
+          <line>274</line>
           <option name="timeStamp" value="40" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/main/java/priv/klochkov/island/controller/LocationController.java</url>
-          <line>182</line>
-          <option name="timeStamp" value="43" />
         </line-breakpoint>
         <breakpoint enabled="true" type="java-exception">
           <properties class="java.lang.ExceptionInInitializerError" package="java.lang" />
